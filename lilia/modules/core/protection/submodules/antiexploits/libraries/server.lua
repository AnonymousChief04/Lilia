function MODULE:Initialize()
    concommand.Remove("lua_run")
    concommand.Remove("lua_openscript")
    concommand.Remove("rcon_password")
    concommand.Remove("rcon")
    RunConsoleCommand("sv_allowcslua", "0")
    RunConsoleCommand("sv_cheats", "0")
    RunConsoleCommand("sv_kickerrornum", "0")
    RunConsoleCommand("sv_allowupload", "0")
    RunConsoleCommand("sv_allowdownload", "0")
    RunConsoleCommand("sv_allowcslua", "0")
end

function MODULE:PlayerSay(client, message)
    local hasIPAddress = string.match(message, "%d+%.%d+%.%d+%.%d+(:%d*)?")
    local hasBadWords = string.find(string.upper(message), string.upper("clone")) and string.find(string.upper(message), string.upper("nutscript"))
    if hasIPAddress then
        ProtectionCore:ApplyPunishment(client, "Typing IP addresses in chat", true, false)
        return ""
    elseif hasBadWords then
        return ""
    end
end

function MODULE:OnEntityCreated(entity)
    local class = entity:GetClass():lower():Trim()
    if class == "lua_run" then
        function entity:AcceptInput()
            return true
        end

        function entity:RunCode()
            return true
        end

        timer.Simple(0, function() entity:Remove() end)
    elseif class == "point_servercommand" then
        timer.Simple(0, function() entity:Remove() end)
    end
end

function MODULE:OnPlayerHitGround(client)
    local vel = client:GetVelocity()
    client:SetVelocity(Vector(-(vel.x * 0.45), -(vel.y * 0.45), 0))
end

function MODULE:OnPlayerDropWeapon(_, _, entity)
    local physObject = entity:GetPhysicsObject()
    if physObject then physObject:EnableMotion() end
    timer.Simple(ProtectionCore.TimeUntilDroppedSWEPRemoved, function() if entity and entity:IsValid() then entity:Remove() end end)
end

function MODULE:EntityTakeDamage(entity, dmgInfo)
    local inflictor = dmgInfo:GetInflictor()
    local attacker = dmgInfo:GetAttacker()
    local validClient = IsValid(entity) and entity:IsPlayer()
    local attackerIsHuman = attacker:IsPlayer()
    local notSameAttackerAsEnt = attacker ~= entity
    local isFallDamage = dmgInfo:IsFallDamage()
    local infIsProp = inflictor and IsValid(inflictor) and inflictor:isProp()
    if not (IsValid(attacker) and validClient) or isFallDamage then return end
    if infIsProp then dmgInfo:SetDamage(0) end
    if notSameAttackerAsEnt then
        if ProtectionCore.CharacterSwitchCooldown and (not ProtectionCore.SwitchCooldownOnAllEntities and attackerIsHuman) or ProtectionCore.SwitchCooldownOnAllEntities then entity.LastDamaged = CurTime() end
        if ProtectionCore.CarRagdoll and (IsValid(inflictor) and inflictor:IsSimfphysCar()) and not entity:InVehicle() then
            dmgInfo:ScaleDamage(0)
            if not IsValid(entity.liaRagdoll) then entity:setRagdolled(true, 5) end
        end
    end
end

function MODULE:CanPlayerSwitchChar(client, character)
    if not client:isStaffOnDuty() then
        if ProtectionCore.OnDamageCharacterSwitchCooldown and client.LastDamaged and client.LastDamaged > CurTime() - ProtectionCore.OnDamageCharacterSwitchCooldownTimer then return false, "You took damage too recently to switch characters!" end
        if ProtectionCore.CharacterSwitchCooldown and (character:getData("loginTime", 0) + ProtectionCore.CharacterSwitchCooldownTimer) > os.time() then return false, "You are on cooldown!" end
    end
end

function MODULE:CanPlayerJoinClass(client)
    if client:getNetVar("ziptied", false) then
        client:notify("You cannot change classes when you are restrained!")
        return false
    end
end
