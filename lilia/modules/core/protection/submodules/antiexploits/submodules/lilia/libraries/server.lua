function MODULE:OnPlayerDropWeapon(_, _, entity)
    local physObject = entity:GetPhysicsObject()
    if physObject then physObject:EnableMotion() end
    timer.Simple(ProtectionCore.TimeUntilDroppedSWEPRemoved, function() if entity and entity:IsValid() then entity:Remove() end end)
end

function MODULE:EntityTakeDamage(entity, dmgInfo)
    local inflictor = dmgInfo:GetInflictor()
    local attacker = dmgInfo:GetAttacker()
    local validClient = IsValid(entity) and entity:IsPlayer()
    local attackerIsHuman = attacker:IsPlayer()
    local notSameAttackerAsEnt = attacker ~= entity
    local isFallDamage = dmgInfo:IsFallDamage()
    local infIsProp = inflictor and IsValid(inflictor) and inflictor:isProp()
    if not (IsValid(attacker) and validClient) or isFallDamage then return end
    if infIsProp then dmgInfo:SetDamage(0) end
    if notSameAttackerAsEnt then
        if ProtectionCore.CharacterSwitchCooldown and (not ProtectionCore.SwitchCooldownOnAllEntities and attackerIsHuman) or ProtectionCore.SwitchCooldownOnAllEntities then entity.LastDamaged = CurTime() end
        if ProtectionCore.CarRagdoll and (IsValid(inflictor) and inflictor:IsSimfphysCar()) and not entity:InVehicle() then
            dmgInfo:ScaleDamage(0)
            if not IsValid(entity.liaRagdoll) then entity:setRagdolled(true, 5) end
        end
    end
end

function MODULE:CanPlayerSwitchChar(client, character)
    if not client:isStaffOnDuty() then
        if ProtectionCore.OnDamageCharacterSwitchCooldown and client.LastDamaged and client.LastDamaged > CurTime() - ProtectionCore.OnDamageCharacterSwitchCooldownTimer then return false, "You took damage too recently to switch characters!" end
        if ProtectionCore.CharacterSwitchCooldown and (character:getData("loginTime", 0) + ProtectionCore.CharacterSwitchCooldownTimer) > os.time() then return false, "You are on cooldown!" end
    end
end

function MODULE:CanPlayerJoinClass(client)
    if client:getNetVar("ziptied", false) then
        client:notify("You cannot change classes when you are restrained!")
        return false
    end
end
