
local GM = GM or GAMEMODE

function GM:ModuleDependenciesPreLoad(uniqueID, module, global)
    if tostring(uniqueID) == "schema" then return end
    if global ~= "" then
        _G[global] = _G[global] or {}
        _G[global] = module
    end
end


function GM:VerifyModuleValidity(uniqueID, module)
    local isEnabled = module.enabled
    for moduleName, conditions in pairs(lia.module.ModuleConditions) do
        if uniqueID ~= moduleName then continue end
        if _G[conditions.global] ~= nil then
            print(conditions.name .. " found. Activating Compatibility!")

            return true
        else
            return false
        end
    end

    return (isEnabled and isEnabled) or true
end


function GM:LiliaLoaded()
    local namecache = {}
    for _, MODULE in pairs(lia.module.list) do
        local authorID = (tonumber(MODULE.author) and tostring(MODULE.author)) or (string.match(MODULE.author, "STEAM_") and util.SteamIDTo64(MODULE.author)) or nil
        if authorID then
            if namecache[authorID] ~= nil then
                MODULE.author = namecache[authorID]
            else
                steamworks.RequestPlayerInfo(
                    authorID,
                    function(newName)
                        namecache[authorID] = newName
                        MODULE.author = newName or MODULE.author
                    end
                )
            end
        end
    end

    lia.module.namecache = namecache
end


function GM:ModuleLoaded(uniqueID, MODULE)
    if uniqueID == "schema" then return end
    if MODULE.WorkshopContent then
        for i = 1, #MODULE.WorkshopContent do
            resource.AddWorkshop(MODULE.WorkshopContent[i])
        end
    end

    if MODULE.CAMIPrivileges then
        for _, privilegeData in ipairs(MODULE.CAMIPrivileges) do
            local privilegeInfo = {
                Name = privilegeData.Name,
                MinAccess = privilegeData.MinAccess or "admin",
                Description = privilegeData.Description or ("Allows access to " .. privilegeData.Name:gsub("^%l", string.upper))
            }

            if not CAMI.GetPrivilege(privilegeData.Name) then
                CAMI.RegisterPrivilege(privilegeInfo)
            end
        end
    end
end
