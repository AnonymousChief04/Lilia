-------------------------------------------------------------------------------------------------------------------------
-- Prevents Minge Dropping Weaposn
function PLUGIN:OnPlayerDropWeapon(client, item, entity)
    local timer = lia.config.get("TimeUntilDroppedSWEPRemoved", 30)

    timer.Simple(timer, function()
        if entity and entity:IsValid() then
            entity:Remove()
        end
    end)
end

------------------------------------------------------------------------------------------------------------------------
--Prevents Sitting on Players/While Tied 
function PLUGIN:CheckValidSit(ply, trace)
    local ent = trace.Entity
    if ply:getNetVar("restricted") or ent:IsPlayer() then return false end
end

------------------------------------------------------------------------------------------------------------------------
-- Prevents Item Collide Crashes
function PLUGIN:ShouldCollide(f, t)
    if (t:GetClass() == "lia_item" and f:GetClass() == "prop_physics") and (t:GetClass() == "lia_item" and f:IsPlayer()) and (f:GetClass() == "lia_item" and (t:GetClass() == "lia_item" or (t:GetClass() == "gmod_sent_vehicle_fphysics_wheel" or t:GetClass() == "gmod_sent_vehicle_fphysics_base"))) or (t:GetClass() == "lia_item" and (f:GetClass() == "lia_item" or (f:GetClass() == "gmod_sent_vehicle_fphysics_wheel" or f:GetClass() == "gmod_sent_vehicle_fphysics_base"))) then return false end
end

------------------------------------------------------------------------------------------------------------------------
-- Prevents Bag Weapon Equip
function PLUGIN:CanPlayerInteractItem(client, action, itemObject, data)
    local inventory = lia.inventory.instances[itemObject.invID]

    if inventory and (inventory.isBag == true or inventory.isBank == true) then
        if self.BagForbiddenActions[action] then return false, "forbiddenActionStorage" end
    end
end

-------------------------------------------------------------------------------------------------------------------------
--DELAYS VEHICLE SPAWNS
function PLUGIN:PlayerSpawnedVehicle(ply, ent)
    local timer = lia.config.get("PlayerSpawnVehicleDelay", 90)

    if not ply:IsSuperAdmin() then
        ply.NextVehicleSpawn = SysTime() + timer
    end
end

------------------------------------------------------------------------------------------------------------------------
-- Slows Down Spawning
function PLUGIN:PlayerSpawnObject(client, model, skin)
    if client:IsSuperAdmin() then return true end

    if (client.liaNextSpawn or 0) < CurTime() then
        client.liaNextSpawn = CurTime() + 0.75
    else
        if client.AdvDupe2 and client.AdvDupe2.Pasting then return true end

        return false
    end
end

------------------------------------------------------------------------------------------------------------------------
-- Tweaks Props Status to passable in order avoid Prop Kill
function PLUGIN:OnPhysgunPickup(ply, ent)
    if ent:GetClass() == "prop_physics" and ent:GetCollisionGroup() == COLLISION_GROUP_NONE then
        ent:SetCollisionGroup(COLLISION_GROUP_PASSABLE_DOOR)
    end
end

------------------------------------------------------------------------------------------------------------------------
-- Tweaks Props Status to solid in order avoid Prop Kill
function PLUGIN:PhysgunDrop(ply, ent)
    if ent:GetClass() ~= "prop_physics" then return end

    timer.Simple(5, function()
        if IsValid(ent) and ent:GetCollisionGroup() == COLLISION_GROUP_PASSABLE_DOOR then
            ent:SetCollisionGroup(COLLISION_GROUP_NONE)
        end
    end)
end

------------------------------------------------------------------------------------------------------------------------
-- Adds PhysGun Restrictions to Lilia Entities 
function PLUGIN:PhysgunPickup(client, entity)
    if client:IsSuperAdmin() then
        return true
    else
        if table.HasValue(self.RestrictedEntityList, entity:GetClass()) then return false end
        if entity:IsVehicle() then return false end

        if entity:GetCreator() == client and entity:GetClass() == "prop_physics" then
            return true
        elseif entity:GetClass() == "prop_physics" and client:IsAdmin() then
            return true
        end
    end
end

------------------------------------------------------------------------------------------------------------------------
-- Adds Property Tool Restrictions to Lilia Entities
function PLUGIN:CanProperty(client, property, entity)
    if client:IsSuperAdmin() then
        return true
    else
        if table.HasValue(self.RestrictedEntityList, entity:GetClass()) then return false end
        if entity:GetCreator() == client and (property == "remover" or property == "collision") then return true end
        if client:IsAdmin() and (entity:GetCreator() ~= client and (property == "remover" or property == "collision")) then return true end
    end
end

------------------------------------------------------------------------------------------------------------------------
-- Adds Toolgun Restrictions to Lilia Entities
function PLUGIN:CanTool(client, trace, tool)
    local entity = trace.Entity

    if client:IsSuperAdmin() then
        return true
    else
        if table.HasValue(self.Disallowed, tool) then return false end

        if tool == "remover" then
            if table.HasValue(self.blockedEntities, entity:GetClass()) then
                return false
            elseif entity:GetCreator() ~= client and not client:IsAdmin() then
                return false
            elseif entity:GetCreator() == client then
                return true
            elseif entity:GetCreator() ~= client and client:IsAdmin() then
                return true
            end
        elseif tool == "colour" or tool == "material" then
            if entity:IsPlayer() or entity:IsNPC() then
                return false
            elseif table.HasValue(self.blockedEntities, entity:GetClass()) then
                return false
            elseif entity:GetCreator() ~= client and not client:IsAdmin() then
                return false
            elseif entity:GetCreator() == client then
                return true
            elseif entity:GetCreator() ~= client and client:IsAdmin() then
                return true
            end
        end
    end
end